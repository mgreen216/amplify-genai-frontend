# ---- Base Node ----
FROM public.ecr.aws/docker/library/node:lts-alpine AS base
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production

# ---- Dependencies ----
FROM base AS dependencies
RUN npm ci

# ---- Copy application ----
FROM dependencies AS build
COPY --chown=appuser:appgroup . .
RUN npm run build

# ---- Production ----
FROM public.ecr.aws/docker/library/node:lts-alpine
RUN addgroup -g 1001 -S appgroup && adduser -S appuser -u 1001
WORKDIR /app
COPY --from=base --chown=appuser:appgroup /app/node_modules ./node_modules
COPY --from=build --chown=appuser:appgroup /app/.next ./.next
COPY --from=build --chown=appuser:appgroup /app/public ./public
COPY --from=build --chown=appuser:appgroup /app/next.config.js ./next.config.js
COPY --from=build --chown=appuser:appgroup /app/package*.json ./

# Add next-i18next config
COPY --from=build --chown=appuser:appgroup /app/next-i18next.config.js ./next-i18next.config.js || true
COPY --from=build --chown=appuser:appgroup /app/i18n.js ./i18n.js || true

# Set environment to production
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Expose the application port
EXPOSE 3000

# Run as non-root user
USER appuser

# Start the application
CMD ["npm", "start"]